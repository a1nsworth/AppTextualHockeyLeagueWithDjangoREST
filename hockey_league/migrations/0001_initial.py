# Generated by Django 4.2.7 on 2023-11-26 12:37

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CashMachine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_tickets', models.PositiveIntegerField()),
                ('sold_tickets', models.PositiveIntegerField()),
                ('remaining_tickets', models.PositiveIntegerField()),
                ('money_from_sale', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='HockeyLeague',
            fields=[
                ('name', models.CharField(max_length=100, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(code='invalid_name', message='Имя должно содержать только буквы русского алфавита и начинаться с Заглавной буквы.', regex='^[А-Я][а-я]{1,}$')])),
                ('second_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(code='invalid_name', message='Имя должно содержать только буквы русского алфавита и начинаться с Заглавной буквы.', regex='^[А-Я][а-я]{1,}$')])),
                ('efficiency', models.FloatField()),
                ('rating', models.FloatField()),
                ('position', models.CharField(choices=[('FORWARD', 'Forward'), ('DEFENSE', 'Defense'), ('GOALIE', 'Goalie')], default=None, max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_begin', models.DateField()),
                ('date_end', models.DateField()),
                ('hockey_league_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hockey_league.hockeyleague')),
            ],
        ),
        migrations.CreateModel(
            name='TypeTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.PositiveIntegerField()),
                ('type', models.CharField(choices=[('VIP', 'Vip'), ('STANDARD', 'Standard'), ('CHILD', 'Child')], default='STANDARD', max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('name', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('popularity', models.FloatField()),
                ('season_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hockey_league.season')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerStatistic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count_matches', models.PositiveIntegerField()),
                ('count_goals', models.PositiveIntegerField()),
                ('count_goals_conceded', models.PositiveIntegerField()),
                ('count_goals_pass', models.PositiveIntegerField()),
                ('count_penalties', models.PositiveIntegerField()),
                ('player_id', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hockey_league.player')),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=50)),
                ('date_time_start', models.DateTimeField()),
                ('spend_money', models.FloatField()),
                ('opponent_1_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='opponent_1_id', to='hockey_league.team')),
                ('opponent_2_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='opponent_2_id', to='hockey_league.team')),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sold', models.BooleanField(default=False)),
                ('sector_number', models.PositiveIntegerField()),
                ('row_number', models.PositiveIntegerField()),
                ('place_number', models.PositiveIntegerField()),
                ('cash_machine_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hockey_league.cashmachine')),
                ('match_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hockey_league.match')),
                ('type_ticket_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hockey_league.typeticket')),
            ],
            options={
                'unique_together': {('sector_number', 'row_number', 'place_number')},
            },
        ),
    ]
